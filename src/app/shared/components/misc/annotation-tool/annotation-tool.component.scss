/* URL Annotations Loading Indicator - similar to the measuring tool's */
.url-annotations-loading-indicator {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 10000; /* Higher than any other element */
  background-color: rgba(0, 0, 0, 0.8);
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 0 40px rgba(0, 0, 0, 0.5), 0 0 20px rgba(255, 255, 255, 0.2);
  border: 2px solid rgba(255, 255, 255, 0.2);
  min-width: 250px;
  min-height: 150px;

  .spinner-border {
    width: 2rem;
    height: 2rem;
    border-width: 0.3em;
  }

  .loading-text {
    color: white;
    font-weight: 500;
    font-size: 1.1rem;
    margin-top: 15px;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
  }

  .btn-outline-light {
    border: 1px solid rgba(255, 255, 255, 0.5);
    color: rgba(255, 255, 255, 0.8);
    background-color: rgba(0, 0, 0, 0.3);
    padding: 8px 16px;
    font-size: 0.9rem;
    transition: all 0.2s ease;

    &:hover, &:active, &:focus {
      background-color: rgba(255, 255, 255, 0.2);
      color: white;
      border-color: rgba(255, 255, 255, 0.8);
    }
  }
}

.annotation-tool-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000; /* Reset to original value */
  user-select: none; /* Prevent text selection while using the annotation tool */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  touch-action: none; /* Disable browser handling of all touch gestures */
  pointer-events: none; /* Don't capture pointer events when not active */

  &.pointer-events-all {
    pointer-events: all; /* Only capture pointer events when active */

    /* When in read-only mode, still allow clicks to pass through to the image */
    &.read-only-mode {
      pointer-events: none;

      /* But keep the toolbar clickable if it's visible */
      .fixed-top-toolbar {
        pointer-events: all;
      }
    }
  }

  /* Toolbar should only be visible in edit mode */
  .fixed-top-toolbar {
    display: block;
    pointer-events: all; /* Always allow toolbar interaction */
  }
}

/* Full-screen viewer specific styles */
::ng-deep .fullscreen-image-viewer .measure-annotation-overlay {
  display: block !important; /* Always show annotation overlay in fullscreen mode */
  z-index: 1500 !important; /* Make sure it's above the image */
}

.fixed-top-toolbar {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.75);
  color: white;
  padding: 10px;
  border-radius: 12px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
  z-index: 10000; /* Original value - very high to be above everything else */
  width: auto;
  text-align: center;
  backdrop-filter: blur(4px);
  -webkit-backdrop-filter: blur(4px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.toolbar-buttons {
  display: flex;
  justify-content: center;
  flex-wrap: nowrap;
  gap: 8px;

  .toolbar-separator {
    width: 1px;
    height: 24px;
    background-color: rgba(255, 255, 255, 0.3);
    margin: 0 8px;
    align-self: center;
  }
}

.fixed-top-toolbar button,
.annotation .control-toolbar button.tool-button {
  background-color: rgba(255, 255, 255, 0.15);
  color: white;
  border: none;
  padding: 10px 16px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
  z-index: 10001;
  transition: all 0.2s ease;
  min-width: 90px;

  &:hover {
    background-color: rgba(255, 255, 255, 0.25);
    transform: translateY(-1px);
  }

  &:active {
    background-color: rgba(255, 255, 255, 0.3);
    transform: translateY(0);
  }
}

.fixed-top-toolbar button.icon-button {
  min-width: unset;
  width: 42px;
  height: 42px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;

  fa-icon {
    font-size: 16px;
    color: white;
  }

  &:hover:not(:disabled) {
    background-color: rgba(255, 255, 255, 0.25);
    transform: translateY(-1px);
  }

  &:active:not(:disabled) {
    background-color: rgba(255, 255, 255, 0.3);
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.4;
    cursor: not-allowed;
    background-color: rgba(255, 255, 255, 0.1) !important;

    &:hover, &:active {
      transform: none;
      background-color: rgba(255, 255, 255, 0.1) !important;
    }
  }

  &.exit-button {
    background-color: rgba(255, 255, 255, 0.08);

    &:hover:not(:disabled) {
      background-color: rgba(255, 75, 75, 0.3);
    }
  }

  &.saving {
    background-color: rgba(0, 123, 255, 0.25) !important;

    &:disabled {
      opacity: 1;
    }

    fa-icon {
      color: rgba(255, 255, 255, 0.9);
    }
  }

  &.success {
    background-color: rgba(40, 167, 69, 0.6) !important;

    fa-icon.save-success-icon {
      color: white;
    }
  }

  &.help-button {
    background-color: rgba(0, 123, 255, 0.2);

    &:hover:not(:disabled) {
      background-color: rgba(0, 123, 255, 0.3);
    }
  }
}

/* HTML-based annotation styles */
.annotation-container {
  position: fixed; /* Using fixed position for consistency with letterboxing calculations */
  /* Position and size will be set dynamically via JavaScript to match the actual displayed image area */
  z-index: 1001; /* Original z-index value */
  width: 100%;
  height: 100%;
  pointer-events: all;
  overflow: visible; /* Allow annotations to overflow for notes that may go outside the image */
  /* Add a subtle outline to help debug letterboxing (will be barely visible) */
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.05);
  transition: opacity 0.2s ease;

  /* Hide annotations during window resize for better performance and cleaner UX */
  &.hidden-during-resize {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.1s ease;
  }

  /* In read-only mode, don't capture pointer events so clicks pass through to the image */
  .read-only-mode & {
    pointer-events: none;
  }
}

.annotation-layer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1002;

  /* In read-only mode, don't capture pointer events */
  .read-only-mode & {
    pointer-events: none;
  }
}

.annotation {
  position: absolute;
  border: 1px solid;
  box-sizing: border-box;
  cursor: move;
  transform-origin: center center;
  touch-action: none; /* Disable browser handling of all touch gestures */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0); /* Remove tap highlight on mobile */

  /* Read-only annotations styling */
  &.read-only {
    cursor: default;
    pointer-events: none; /* Prevent any interaction with the shape */
  }

  .annotation-title {
    position: absolute;
    bottom: calc(100% + 0.5rem); // Some space between title and shape (0.5rem)
    left: 50%; // Align with the shape directly
    transform: translateX(-50%);
    max-width: 100%; // Match the width of the shape exactly
    font-size: 10px;
    text-align: center;
    color: rgba(0, 0, 0, 0.9);
    background-color: rgba(255, 255, 255, 0.9);
    padding: 4px 8px;
    border-radius: 4px;
    white-space: normal; // Allow wrapping
    box-sizing: border-box;
    pointer-events: none; // Allow click-through on the title
    line-height: 1.3;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.5); // Add shadow for visual separation
  }

  &.rectangle {
    border-radius: 2px;
  }

  &.circle {
    border-radius: 50%;
    height: 0 !important; /* Force height to be controlled by padding-bottom */
    box-sizing: content-box; /* Ensure padding is added to element dimensions */
  }

  &.arrow {
    border: none;
    background-color: transparent !important;

    .arrow-line {
      position: absolute;
      height: 1px;
      transform-origin: left center;
      top: 50%;
      left: 0;
    }

    .arrow-head {
      position: absolute;
      width: 0;
      height: 0;
      border-top: 6px solid transparent;
      border-bottom: 6px solid transparent;
      border-left: 8px solid;
      transform-origin: 0 50%;
    }
  }

  .control-points {
    .control-point {
      position: absolute;
      width: 20px; /* Increased size for better touch targets */
      height: 20px; /* Increased size for better touch targets */
      background-color: white;
      border: 2px solid rgba(0, 0, 0, 0.5);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      z-index: 1;
      touch-action: none; /* Disable browser handling of all touch gestures */

      &.top-left {
        top: 0;
        left: 0;
        cursor: nwse-resize;
      }

      &.top-right {
        top: 0;
        right: 0;
        transform: translate(50%, -50%);
        cursor: nesw-resize;
      }

      &.bottom-left {
        bottom: 0;
        left: 0;
        transform: translate(-50%, 50%);
        cursor: nesw-resize;
      }

      &.bottom-right {
        bottom: 0;
        right: 0;
        transform: translate(50%, 50%);
        cursor: nwse-resize;
      }

      &.right {
        top: 50%;
        right: 0;
        transform: translate(50%, -50%);
        cursor: ew-resize;
        background-color: white;
        border: 2px solid rgba(0, 0, 0, 0.7);
        box-shadow: 0 0 4px rgba(255, 255, 255, 0.5);
        z-index: 5;
      }

      &.left {
        top: 50%;
        left: 0;
        transform: translate(-50%, -50%);
        cursor: ew-resize;
        background-color: white;
        border: 2px solid rgba(0, 0, 0, 0.7);
        box-shadow: 0 0 4px rgba(255, 255, 255, 0.5);
        z-index: 5;
      }

      &.top {
        top: 0;
        left: 50%;
        transform: translate(-50%, -50%);
        cursor: ns-resize;
        background-color: white;
        border: 2px solid rgba(0, 0, 0, 0.7);
        box-shadow: 0 0 4px rgba(255, 255, 255, 0.7);
        z-index: 5;
        width: 14px; /* Make the handle larger */
        height: 14px; /* Make the handle larger */
      }

      &.bottom {
        bottom: 0;
        left: 50%;
        transform: translate(-50%, 50%);
        cursor: ns-resize;
        background-color: white;
        border: 2px solid rgba(0, 0, 0, 0.7);
        box-shadow: 0 0 4px rgba(255, 255, 255, 0.5);
        z-index: 5;
      }

      &.start, &.end {
        border-width: 2px;
        width: 14px;
        height: 14px;
        cursor: move;
      }
    }
  }

  .control-toolbar {
    position: absolute;
    bottom: -60px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.75);
    border-radius: 8px;
    padding: 6px 8px;
    display: flex;
    gap: 12px;
    z-index: 10;
    opacity: 0.9;
    transition: all 0.2s ease-in-out;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(4px);
    -webkit-backdrop-filter: blur(4px);
    border: 1px solid rgba(255, 255, 255, 0.1);

    &:hover {
      opacity: 1;
      transform: translateX(-50%) translateY(-2px);
    }

    .tool-button {
      /* Reset any button styles that could be inherited */
      background: none !important;
      border: none !important;
      color: rgba(255, 255, 255, 0.85) !important;
      font-size: 15px !important;
      min-width: auto !important;
      padding: 5px 8px !important;
      border-radius: 4px !important;
      cursor: pointer !important;
      transition: all 0.15s ease !important;
      transform: none !important;

      &:hover {
        background-color: rgba(255, 255, 255, 0.15) !important;
        color: white !important;
      }

      &.delete:hover {
        background-color: rgba(255, 75, 75, 0.3) !important;
        color: white !important;
      }

      &.message {
        &:hover {
          background-color: rgba(75, 255, 255, 0.2) !important;
          color: white !important;
        }
      }
    }
  }

  &.active {
    .control-point {
      width: 14px;
      height: 14px;
    }
  }
}

/* Drawing overlay */
.drawing-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1001;
  cursor: crosshair;

  /* In read-only mode, don't capture pointer events */
  .read-only-mode & {
    pointer-events: none;
  }
}

.drawing-preview {
  position: absolute;
  border: 1px dashed;
  box-sizing: border-box;
  pointer-events: none;

  &.rectangle {
    border-radius: 2px;
  }

  &.circle {
    border-radius: 50%;
    height: 0 !important; /* Force height to be controlled by padding-bottom */
    box-sizing: content-box; /* Ensure padding is added to element dimensions */
  }
}

/* Mouse event overlay for dragging */
.mouse-event-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999; /* Original high value */
  cursor: inherit;
  background-color: transparent;
  touch-action: none; /* Disable browser handling of all touch gestures */

  /* In read-only mode, don't capture pointer events */
  .read-only-mode & {
    pointer-events: none;
  }
}

/* Custom help offcanvas width */
::ng-deep .help-offcanvas {
  &:not(.offcanvas-bottom) {
    width: 50vw !important;
    max-width: 600px;
  }
}

/* Global styles to hide UI elements when annotation tool is active in regular image viewer */
::ng-deep body.annotation-mode-active {
  /* Hide specific elements in the regular image viewer */
  .regular-image-viewer .moon-scale,
  .regular-image-viewer .celestial-north-indicator,
  .regular-image-viewer .close-button,
  .regular-image-viewer .toolbar-buttons:not(.annotation-toolbar),
  .regular-image-viewer .action-buttons,
  .regular-image-viewer .measure-buttons,
  .regular-image-viewer .solution-overlay,
  .regular-image-viewer .plate-solving-button,
  .regular-image-viewer .menu-button,
  .regular-image-viewer .image-navigation,
  .regular-image-viewer .image-toolbar,
  .regular-image-viewer .revision-thumbnails,
  .regular-image-viewer .revision-nav {
    display: none !important;
  }

  /* Ensure the annotation container is visible */
  .annotation-container {
    opacity: 1 !important;
    visibility: visible !important;
  }
}

/* Annotation messages styling */
.annotation-messages {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1002;
  pointer-events: none; /* Allow clicks to pass through to underlying elements */
}

/* Add some special styles to improve touch dragging */
.annotation-tool-container {
  &.touch-drag-active {
    .annotation-container, .annotation-layer {
      pointer-events: all !important;
    }

    .mouse-event-overlay {
      visibility: visible !important;
      z-index: 9999 !important;
    }
  }
}

