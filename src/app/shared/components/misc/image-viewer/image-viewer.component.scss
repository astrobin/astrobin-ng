@import "src/app/styles/breakpoints";
@import "src/app/styles/mixins";
@import "./image-viewer-mixins";

$globalLoadingIndicatorHeight: 6px;
$largeViewPortBreakpoint: 2561px;

@mixin clickableMetadata {
  color: var(--lightestGrey);
  cursor: pointer;
  text-decoration: underline;
  text-decoration-color: var(--lightGrey);
  text-decoration-thickness: 1px;
  text-underline-offset: 4px;

  &:hover {
    color: var(--accentColor);
    text-decoration-color: var(--accentColor);
  }
}

:host {
  width: 100%;
  height: 100%;
  background-color: var(--black);
  display: flex;
  flex-direction: column;
  z-index: 1;

  ::ng-deep .moon-info-popover {
    max-width: 300px;

    .moon-info-content {
      font-size: .85rem;
      line-height: 1.4;
    }
  }

  will-change: transform, opacity;
  transform: translateY(0) scale(1);
  transition: transform 0.3s ease, opacity 0.3s ease;

  ::ng-deep .highlight {
    @include highlight;
  }

  ::ng-deep {
    .metadata-striped {
      padding: .75rem 0;
      margin-bottom: 2rem;

      & > * {
        display: block;

        @media (min-width: $lg-min) {
          &:first-child {
            .metadata-section {
              border-top-left-radius: .25rem;
              border-top-right-radius: .25rem;
            }
          }

          &:last-child {
            .metadata-section {
              border-bottom-left-radius: .25rem;
              border-bottom-right-radius: .25rem;
            }
          }
        }

        &:nth-child(odd) {
          .metadata-section {
            background: rgba(0, 0, 0, .075);
          }
        }

        &:nth-child(even) {
          .metadata-section {
            background: rgba(255, 255, 255, .025);
          }
        }

        &:only-child {
          @media (min-width: $lg-min) {
            .metadata-section {
              border-radius: .25rem;
            }
          }

          .metadata-section {
            background: none;
          }
        }

        .metadata-section {
          padding-left: 1rem;
          padding-right: 1rem;
        }
      }
    }

    .metadata-header {
      @include darkest-background-texture;
      margin: 0 0 0.25rem;
      padding: .5rem .75rem;
      color: var(--lightestGrey);
      border-radius: var(--bs-border-radius);

      + .metadata-section {
        padding-top: .5rem;
        margin-bottom: 2rem;
      }
    }

    .metadata-section {
      display: flex;
      gap: .75rem;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      width: 100%;
      padding: .75rem 0;

      .metadata-item {
        display: flex;
        align-items: center;
        gap: .5rem;
        position: relative;
        max-width: 100%;

        .metadata-icon {
          line-height: 0;
          height: 1rem;
          display: flex;
          align-items: center;
          justify-content: center;
          color: var(--accentColor);

          .ng-fa-icon,
          img {
            height: 1rem;
            cursor: help;
          }

          .ng-fa-icon {
            opacity: .75;
            font-size: .85rem;
            line-height: 1rem;
          }

          img {
            // Matches accent color closely without needing to generate new icons.
            filter: invert(60%) sepia(100%) saturate(1000%) hue-rotate(5deg) brightness(75%) contrast(100%);
            height: .85rem;
            vertical-align: middle;
          }

          [data-toggle="offcanvas"] {
            cursor: pointer;

            &:hover {
              color: var(--lightestGrey);
            }
          }
        }

        .metadata-label,
        .metadata-link {
          line-height: 1.15rem;
          max-width: 100%;
        }

        .metadata-label {
          color: var(--white);

          .symbol {
            color: var(--lighterGrey);
          }

          .value {
            overflow: hidden;
            text-overflow: ellipsis;
          }

          [data-toggle="tooltip"],
          [data-toggle="offcanvas"] {
            @include clickableMetadata;

            &:hover .symbol {
              color: var(--accentColor);
            }
          }
        }

        .metadata-link {
          @include clickableMetadata;

          &.search {
            cursor: url("/assets/images/search-white.png") 16 16, pointer;
          }

          &.metadata-link-sponsor {
            color: var(--gold);
            text-decoration-color: var(--gold);
          }
        }
      }
    }

    .metadata-header.supports-collapsing {
      padding-right: 2rem;
      position: relative;
      cursor: pointer;

      &:after {
        content: "";
        position: absolute;
        top: 50%;
        right: 1rem;
        width: 0;
        height: 0;
        border-top: 0.25rem solid var(--lighterGrey);
        border-right: 0.25rem solid transparent;
        border-bottom: 0.25rem solid transparent;
        border-left: 0.25rem solid transparent;
        transform: translateY(-50%) rotate(180deg);
        transform-origin: 50% calc(50% - .25rem / 4);
        transition: transform 0.3s ease-in-out;
      }

      &.collapsed {
        &:after {
          transform: translateY(calc(-50% + .25rem / 2));
        }
      }
    }
  }

  width: 100%;
  height: 100%;
  background-color: var(--black);
  display: flex;
  flex-direction: column;
  z-index: 1;

  .image-loading-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .75);
    z-index: 1040;
    opacity: 0;
    transition: opacity 0.2s ease;
    pointer-events: none;

    &.loading {
      opacity: 1;
      pointer-events: auto;
    }

    @media (min-width: $lg-min) or (min-aspect-ratio: 1/1) {
      display: none;
    }
  }

  .main-area-container {
    // Real black as opposed to var(--black), for maximum contrast. Only visible on resolutions larger than
    // $largeViewPortBreakpoint.
    background: black;
  }

  .main-area {
    display: flex;
    flex-grow: 1;
    width: 100%;
    height: 100%;
    overflow: hidden;
    max-width: 3660px;
    margin: 0 auto;

    .image-area {
      display: flex;
      flex-direction: column;
      position: relative;
      width: 60%;
      height: 100%;
      touch-action: manipulation;
      pointer-events: auto;
      background: black; // Real black as opposed to var(--black), for maximum contrast.
      transition: height 0.3s ease;

      // Annotation tool - similar to mouse-hover behavior
      .measure-annotation-overlay {
        opacity: 0; // Hidden by default
        transition: opacity 0.3s ease;
      }

      // Show on hover - similar to mouse-hover pattern
      &:hover .measure-annotation-overlay {
        opacity: 1; // Show on hover
      }

      // Always show when force-view-annotations-mousehover class is active
      &.force-view-annotations-mousehover .measure-annotation-overlay {
        opacity: 1; // Always visible when forced
      }

      // Always show when we're in annotation mode (direct interaction)
      &.annotation-mode .measure-annotation-overlay {
        opacity: 1 !important; // Always visible when in annotation mode
      }

      @media (max-width: $lg-max) {
        width: 50%;
      }

      @media (min-width: $largeViewPortBreakpoint) {
        width: 75%;
      }

      @include portrait-layout {
        width: 100%;
        min-height: calc(50vh - 3rem);
        max-height: calc(70vh - 3rem);
        height: unset;
        flex-direction: column;
        flex-shrink: 0;
      }

      .image-area-body {
        position: relative;
        display: flex;
        align-items: center;
        flex-grow: 1;
        height: 100%;
        max-height: inherit;
        touch-action: none !important;
        -webkit-tap-highlight-color: transparent !important;

        .moon-scale-overlay {
          position: absolute;
          transform: translate(-50%, -50%);
          pointer-events: auto;
          z-index: 10;
          display: flex;
          flex-direction: column;
          align-items: center;
          cursor: grab;
          touch-action: none !important; /* Critical: Prevent browser handling of touch events */
          -webkit-user-select: none !important; /* Safari */
          -ms-user-select: none !important; /* IE 10+ */
          user-select: none !important; /* Standard syntax */
          -webkit-touch-callout: none !important; /* iOS Safari */
          -webkit-tap-highlight-color: transparent !important; /* Remove tap highlight on iOS */
          -ms-touch-action: none !important; /* For IE/Edge */

          /* Enhancement for touch devices */
          @media (pointer: coarse) {
            &::before {
              content: '';
              position: absolute;
              top: -20px;
              left: -20px;
              right: -20px;
              bottom: -20px;
              z-index: -1;
            }
          }

          &.dragging {
            z-index: 20;
            opacity: 0.5;

            .moon-image {
              cursor: grabbing;
            }
          }

          /* Enhancement for touch devices */
          @media (pointer: coarse) {
            &::before {
              content: '';
              position: absolute;
              top: -20px;
              left: -20px;
              right: -20px;
              bottom: -20px;
              z-index: -1;
            }
          }

          .moon-placeholder {
            border-radius: 50%;
            background-color: rgba(255, 255, 255, 0.75);
            box-shadow: 0 0 4px rgba(0, 0, 0, 0.7);
            pointer-events: none; /* Let the parent handle all events */
            display: block;
            position: relative;

            /* Add subtle gradient to give a hint of moon details */
            &::after {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              border-radius: 50%;
              background: radial-gradient(
                  circle at 40% 40%,
                  rgba(255, 255, 255, 0.7) 0%,
                  rgba(255, 255, 255, 0) 70%
              );
            }
          }

          .moon-image {
            filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.7));
            transition: filter 0.2s ease, opacity 0.2s ease;
            pointer-events: none; /* Let the parent handle all events */
            border-radius: 50%; /* Ensure perfect circle */
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center center;
            display: block;

            &.hidden {
              opacity: 0;
              visibility: hidden;
              position: absolute;
            }
          }

          .moon-label-container {
            position: absolute;
            top: 100%;
            left: 50%;
            transform: translateX(-50%);
            pointer-events: auto;
            margin-top: .5rem;
            background-color: var(--lightestGrey);
            padding: .125rem .5rem;
            border-radius: .625rem;
            display: flex;
            flex-direction: row;
            align-items: center;
            white-space: nowrap;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
            opacity: .9;

            .moon-label {
              color: var(--grey);
              font-size: .85rem;
              font-weight: 500;
              cursor: default;
              margin-right: .5rem;
            }

            .divider {
              width: 1px;
              height: 1rem;
              background-color: var(--lighterGrey);
              margin: 0 .5rem 0 0;
            }

            .moon-controls {
              display: flex;
              align-items: center;
              gap: .375rem;
            }

            .icon-btn {
              color: var(--darkGrey);
              cursor: pointer;
              font-size: .75rem;
              display: flex;
              align-items: center;
              justify-content: center;
              width: 1.25rem;
              height: 1.25rem;
              transition: color 0.2s ease, transform 0.2s ease;

              &:hover {
                color: var(--black);
                transform: scale(1.1);
              }
            }

            .close-moon-btn {
              background: none;
              border: none;
              padding: 0;
              line-height: 1;
            }
          }
        }
      }

      &.has-top-banner .image-area-body {
        height: calc(100% - 3rem);
      }

      .adjustment-editor {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        width: 100%;
        padding: .5rem .5rem .5rem 1rem;
        z-index: 1;
      }

      .close-button,
      .next-button,
      .previous-button,
      .revisions-mobile-button,
      .north-arrow-container {
        position: absolute;
      }

      .north-arrow-container {
        left: 50%;
        top: .5rem;
        z-index: 10;
        font-size: .75rem;
        transform-origin: 20px 38px;

        .north-arrow-wrapper {
          position: relative;
          height: 100%;
          width: 100%;
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: column-reverse;
        }

        .north-arrow {
          width: 2.5rem;
          height: 2.5rem;
          filter: drop-shadow(0 0 .5rem rgba(255, 255, 255, .5));
        }

        .north-arrow-label {
          font-weight: bold;
          display: flex;
          align-items: center;
          justify-content: center;
          pointer-events: none;
          user-select: none;
          color: red;
          text-shadow: 0 0 .375rem rgba(255, 255, 255, .5);
        }
      }

      ::ng-deep .close-button,
      .next-button,
      .previous-button,
      ::ng-deep .additional-buttons .btn,
      .revisions-mobile-button {
        background: rgba(0, 0, 0, .5);
        border-radius: .25rem;
        border: none;
        color: var(--white);
        font-size: 1.5rem;
        cursor: pointer;
        z-index: 1031;
        opacity: 1;
        pointer-events: all;
        padding: .5rem;
        transition: opacity 0.3s, transform 0.3s ease-in-out;

        &:focus-visible {
          outline: none !important;
        }

        .ng-fa-icon {
          margin: 0;
        }

        @media (hover: hover) and (pointer: fine) {
          opacity: 0;
          pointer-events: none;

          &:hover {
            opacity: 1 !important;
            pointer-events: all;
          }
        }
      }

      .next-button,
      .previous-button {
        padding: 1rem .75rem;
        border-radius: .75rem;
        z-index: 1030;
        display: flex;
        justify-content: center;
        align-items: center;

        @include portrait-layout {
          position: fixed;
          opacity: .8 !important;
          font-size: 1.25rem !important;
          border-radius: 50%;
          height: 2rem;
          width: 2rem;
          background: rgba(0, 0, 0, .75);
          padding: 1.5rem;
          filter: drop-shadow(0 0 .25rem var(--black));
        }

        &:focus-visible {
          outline: none !important;
        }
      }

      .close-button {
        top: .75rem;
        left: .75rem;
        opacity: 1;
      }

      .additional-buttons {
        top: .75rem;
        right: .75rem;
        display: flex;
        gap: .5rem;
        flex-wrap: nowrap;
      }

      .next-button,
      .previous-button {
        top: 50%;
        transform: translateY(-50%);
      }

      .next-button {
        right: .25rem;

        @media (hover: hover) and (pointer: fine) {
          &:hover {
            transform: translateX(0.125rem) translateY(-50%);
          }
        }
      }

      .previous-button {
        left: .25rem;

        @media (hover: hover) and (pointer: fine) {
          &:hover {
            transform: translateX(-0.125rem) translateY(-50%);
          }
        }
      }

      .revisions-mobile-button {
        bottom: .75rem;
        left: 0;
        right: 0;
        margin: 0 auto;
        width: 2.25rem;
        height: 2.25rem;
        border-radius: 50%;
        border: 1px solid var(--grey);
        font-size: 1rem;
        line-height: 1rem;
        display: none;

        @media (pointer: coarse) {
          pointer-events: auto;
          display: block;
          opacity: 1;
        }
      }

      ::ng-deep astrobin-image {
        .astrobin-image {
          width: 100%;
          height: auto;
          max-height: 100%;
          object-fit: contain;
        }

        .video-js {
          width: 100%;
          height: 100%;
          max-width: 100%;
          max-height: 100%;

          video {
            height: 100%;
            max-height: 100%;
            object-fit: contain;
          }
        }

        &.supports-fullscreen {
          .astrobin-image {
            cursor: zoom-in;
          }
        }
      }

      .mouse-hover-container {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        max-width: 100%;
        max-height: 100%;

        .mouse-hover {
          width: 100%;
          height: 100%;
          max-width: 100%;
          max-height: 100%;
          object-fit: contain;
          opacity: 0;
          transition: opacity 0.3s;
          cursor: zoom-in;
        }
      }

      .mouse-hover-svg-container {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;

        .x-ruler {
          position: absolute;
          left: 0;
          height: 1px;
          width: 100%;
          border-top: 1px solid rgba(255, 255, 255, 0.2);
          border-bottom: 1px solid rgba(0, 0, 0, 0.2);
          z-index: 1;
          pointer-events: none;
          opacity: 0;
        }

        .y-ruler {
          position: absolute;
          top: 0;
          height: 100%;
          width: 1px;
          border-left: 1px solid rgba(255, 255, 255, 0.2);
          border-right: 1px solid rgba(0, 0, 0, 0.2);
          z-index: 1;
          pointer-events: none;
          opacity: 0;
        }

        .mouse-hover {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: auto;
          max-height: 100%;
          object-fit: contain;
          opacity: 0;
          transition: opacity 0.3s;
          cursor: zoom-in;
          // Believe it or not, this is necessary to prevent the SVG to display with a white background.
          color-scheme: none;

          ::ng-deep svg {
            pointer-events: none;
          }
        }

        .mouse-hover-svg-overlay {
          position: absolute;
          bottom: .5rem;
          right: .5rem;
          opacity: 0;
          transition: opacity 0.3s;
          z-index: 1;

          @media (hover: hover) and (pointer: fine) {
            &:hover {
              opacity: 1;
            }
          }
        }
      }

      @media (hover: hover) and (pointer: fine) {
        &:hover {
          .close-button,
          .next-button,
          .previous-button,
          ::ng-deep .additional-buttons .btn {
            opacity: .75;
            pointer-events: auto;
          }
        }
      }

      &.hover:not(.adjustments-editor-visible) {
        .mouse-hover-svg-container .mouse-hover.ready {
          cursor: none;
        }

        .mouse-hover.ready,
        .mouse-hover.ready + .mouse-hover-svg-overlay {
          opacity: 1 !important;
          pointer-events: auto;
        }

        .x-ruler,
        .y-ruler {
          opacity: .75 !important;
        }
      }

      &.force-view-mousehover {
        .mouse-hover.ready,
        .mouse-hover.ready + .mouse-hover-svg-overlay {
          opacity: 1 !important;
          pointer-events: auto;
        }
      }

      ::ng-deep .mouse-hover {
        background: transparent !important;
      }

      // The buttons are always visible on touch devices. The revisions are handled separately and activated
      // by a button.
      @media (pointer: coarse) {
        astrobin-image-viewer-revisions {
          opacity: 0;
          pointer-events: none;
          transition: opacity 0.3s;
        }

        .close-button,
        .additional-buttons {
          top: .25rem;
        }

        .close-button,
        .next-button,
        .previous-button,
        ::ng-deep .additional-buttons .btn {
          opacity: .75;
          pointer-events: auto;
          font-size: 1rem;
        }

        astrobin-image-viewer-revisions.show {
          opacity: 1;
          pointer-events: auto;
        }
      }

      @media (pointer: fine) {
        &.hover astrobin-image-viewer-revisions ::ng-deep .revisions {
          background: rgba(0, 0, 0, .5);
        }
      }
    }

    .data-area-container {
      position: relative;
      width: 40%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;

      .data-area-bottom-gradient {
        position: fixed;
        bottom: 0;
        left: 60%;
        right: 0;
        height: 5rem;
        background: linear-gradient(
            180deg,
            transparent 0, rgba(0, 0, 0, .03) 4%,
            rgba(0, 0, 0, .11) 21%,
            rgba(0, 0, 0, .8) 78%,
            rgba(0, 0, 0, .9) 95%,
            rgba(0, 0, 0, .95)
        );
        pointer-events: none;

        @media (max-width: $lg-max) {
          left: 50%;
          height: 4rem;
        }

        @media (min-width: $largeViewPortBreakpoint) {
          left: 75%;
        }

        @include portrait-layout {
          display: none;
        }
      }

      .data-area {
        @include darker-background-texture;
        height: 100%;
        padding: 2rem;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
        font-size: .9rem;

        astrobin-ad-manager {
          z-index: 1;

          @media (min-width: $lg-min) {
            margin: -2rem -2rem 2rem -2rem;
          }

          @media (min-width: $xl-min) {
            margin-left: -3rem;
            margin-right: -3rem;
          }

          @media (max-width: $md-max) {
            margin: -1rem -1em 1rem -1rem;
            top: -1rem;
          }
        }

        ::ng-deep {
          .image-viewer-banner-component {
            @media (min-width: $lg-min) {
              + .image-viewer-banner-component {
                margin-top: 1rem;
              }
            }

            .image-viewer-banner {
              padding: .5rem 2rem;
              border-radius: 0;
              box-shadow: none;

              @media (min-width: $lg-min) {
                margin: -2rem -2rem 1rem -2rem;
              }

              @media (min-width: $xl-min) {
                margin-left: -3rem;
                margin-right: -3rem;
                padding-left: 3rem;
                padding-right: 3rem;
              }

              @media (max-width: $md-max) {
                margin: -1rem -2rem 1rem -2rem;
              }
            }
          }
        }

        .description ::ng-deep {
          display: block;
          word-break: break-word;
          overflow: hidden;
          padding: 0 .5rem;

          img {
            max-width: 100%;
            height: auto;

            &.smiley {
              height: 1rem;
            }

            &[src*="/precise_bbcode/smilies/"] {
              height: 1rem;
            }

            &.loading {
              height: 1rem;
            }

            &[data-src] {
              cursor: zoom-in;
            }
          }
        }

        .btn-translate-description {
          margin-top: -1.5rem;
        }

        astrobin-nested-comments ::ng-deep {
          .card {
            box-shadow: none;
            border: 0;
            background: transparent;

            .card-header {
              display: none;
            }

            .card-body {
              padding: 0;
            }
          }
        }

        @media (max-width: $md-max) {
          padding: 1rem .75rem;
        }

        @media (min-width: $lg-min) {
          overflow-y: auto;
          @include custom-scrollbar;
        }

        @media (min-width: $xl-min) {
          padding-left: 3rem;
          padding-right: 3rem;
        }
      }

      @media (max-width: $lg-max) {
        width: 50%;
      }

      @media (min-width: $largeViewPortBreakpoint) {
        width: 25%;
      }

      @include portrait-layout {
        width: 100%;
        height: unset;

        .data-area {
          // This makes it so the search components don't think this is the scrollable area.
          overflow-y: hidden;
        }
      }
    }

    @include portrait-layout {
      overflow-y: auto;
      flex-direction: column;
      justify-content: flex-start;
      overscroll-behavior: none;
      @include custom-scrollbar;
    }

    #moon-drag-surface {
      position: fixed !important;
      top: 0 !important;
      left: 0 !important;
      width: 100% !important;
      height: 100% !important;
      z-index: 9999 !important;
      cursor: grabbing !important;
      touch-action: none !important; /* Prevent scrolling while dragging on touch devices */
      -webkit-tap-highlight-color: transparent !important;
      -webkit-touch-callout: none !important;
      -webkit-user-select: none !important;
      user-select: none !important;
    }
  }

  &.standalone {
    position: fixed;
    top: 63px;
    left: 0;
    right: 0;
    bottom: 0;
    height: calc(100% - 63px);
    width: 100%;
    overflow: hidden;
    z-index: 1029;
  }

  @media (max-width: $sm-max) {
    &::ng-deep {
      astrobin-mobile-menu {
        top: unset;
        left: unset;
        right: unset;
        position: unset;
        z-index: 1031;

        .btn {
          padding: 1rem .5rem !important;
          font-size: 1.15rem !important;

          .ng-fa-icon {
            margin: 0;
          }
        }
      }

      astrobin-image-viewer-share-button {
        .ng-fa-icon {
          color: var(--white);
        }
      }
    }
  }
}

::ng-deep {
  .image-viewer-share-offcanvas {
    &:not(.offcanvas-bottom) {
      width: 40% !important;
    }
  }
}
